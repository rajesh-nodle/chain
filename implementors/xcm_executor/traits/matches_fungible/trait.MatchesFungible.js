(function() {var implementors = {};
implementors["xcm_builder"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"frame_support/traits/misc/trait.Get.html\" title=\"trait frame_support::traits::misc::Get\">Get</a>&lt;<a class=\"struct\" href=\"xcm_builder/test_utils/struct.MultiLocation.html\" title=\"struct xcm_builder::test_utils::MultiLocation\">MultiLocation</a>&gt;, B:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.60.0/std/primitive.u128.html\">u128</a>&gt;&gt; <a class=\"trait\" href=\"xcm_executor/traits/matches_fungible/trait.MatchesFungible.html\" title=\"trait xcm_executor::traits::matches_fungible::MatchesFungible\">MatchesFungible</a>&lt;B&gt; for <a class=\"struct\" href=\"xcm_builder/struct.IsConcrete.html\" title=\"struct xcm_builder::IsConcrete\">IsConcrete</a>&lt;T&gt;","synthetic":false,"types":["xcm_builder::matches_fungible::IsConcrete"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"frame_support/traits/misc/trait.Get.html\" title=\"trait frame_support::traits::misc::Get\">Get</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.60.0/std/primitive.slice.html\">&amp;'static [</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.60.0/std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.60.0/std/primitive.slice.html\">]</a>&gt;, B:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.60.0/std/primitive.u128.html\">u128</a>&gt;&gt; <a class=\"trait\" href=\"xcm_executor/traits/matches_fungible/trait.MatchesFungible.html\" title=\"trait xcm_executor::traits::matches_fungible::MatchesFungible\">MatchesFungible</a>&lt;B&gt; for <a class=\"struct\" href=\"xcm_builder/struct.IsAbstract.html\" title=\"struct xcm_builder::IsAbstract\">IsAbstract</a>&lt;T&gt;","synthetic":false,"types":["xcm_builder::matches_fungible::IsAbstract"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()