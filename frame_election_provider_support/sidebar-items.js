initSidebarItems({"mod":[["data_provider","Types that are used by the data provider trait."],["onchain","An implementation of [`ElectionProvider`] that does an on-chain sequential phragmen."]],"struct":[["Assignment","A voter’s stake assignment among a set of targets, represented as ratios."],["ElectionResult","Final result of the election."],["NoElection","An election provider to be used only for testing."],["PhragMMS","A wrapper for [`sp_npos_elections::phragmms()`] that implements [`NposSolver`]. See the documentation of [`sp_npos_elections::phragmms()`] for more info."],["SequentialPhragmen","A wrapper for [`sp_npos_elections::seq_phragmen`] that implements [`NposSolver`]. See the documentation of [`sp_npos_elections::seq_phragmen`] for more info."],["Support","A structure to demonstrate the election result from the perspective of the candidate, i.e. how much support each candidate is receiving."],["TestDataProvider","An election data provider that should only be used for testing."]],"trait":[["ElectionDataProvider","Something that can provide the data to an [`ElectionProvider`]."],["ElectionProvider","Something that can compute the result of an election and pass it back to the caller."],["IdentifierT","an aggregator trait for a generic type of a voter/target identifier. This usually maps to substrate’s account id."],["InstantElectionProvider","A sub-trait of the [`ElectionProvider`] for cases where we need to be sure an election needs to happen instantly, not asynchronously."],["NposSolver","Something that can compute the result to an NPoS solution."],["PerThing","Re-export some type as they are used in the interface. Something that implements a fixed point ration with an arbitrary granularity `X`, as parts per `X`."],["PerThing128","Aggregator trait for a PerThing that can be multiplied by u128 (ExtendedBalance)."],["SortedListProvider","A utility trait for something to implement `ElectionDataProvider` in a sensible way."],["VoteWeightProvider","Something that can provide the `VoteWeight` of an account. Similar to [`ElectionProvider`] and [`ElectionDataProvider`], this should typically be implementing by whoever is supposed to use `SortedListProvider`."]],"type":[["ExtendedBalance","A type in which performing operations on vote weights are safe."],["Supports","A target-major representation of the the election outcome."],["VoteWeight","A type which is used in the API of this crate as a numeric weight of a vote, most often the stake of the voter. It is always converted to [`ExtendedBalance`] for computation."],["Voter","A voter, at the level of abstraction of this crate."],["VoterOf","Same as [`Voter`], but parameterized by an [`ElectionDataProvider`]."]]});